// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nota2.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Nota2.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Nota2.Models.Campanha", b =>
                {
                    b.Property<int>("CamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("AutoAvaliacao")
                        .HasColumnType("boolean");

                    b.Property<string>("Chave")
                        .HasColumnType("character varying(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<int>("UseId")
                        .HasColumnType("integer");

                    b.HasKey("CamID");

                    b.HasIndex("UseId");

                    b.ToTable("Campanhas");
                });

            modelBuilder.Entity("Nota2.Models.TipoUsuario", b =>
                {
                    b.Property<int>("TipoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.HasKey("TipoID");

                    b.ToTable("TipoUsuarios");
                });

            modelBuilder.Entity("Nota2.Models.Usuario", b =>
                {
                    b.Property<int>("UseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TipoId")
                        .HasColumnType("integer");

                    b.HasKey("UseID");

                    b.HasIndex("TipoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Nota2.Models.Voto", b =>
                {
                    b.Property<long>("VotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CamId")
                        .HasColumnType("integer");

                    b.Property<string>("Comentario")
                        .HasColumnType("text");

                    b.Property<DateTime>("DataVoto")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Nota")
                        .HasColumnType("integer");

                    b.HasKey("VotID");

                    b.HasIndex("CamId");

                    b.ToTable("Votos");
                });

            modelBuilder.Entity("Nota2.Models.Campanha", b =>
                {
                    b.HasOne("Nota2.Models.Usuario", "Usuario")
                        .WithMany("Campanhas")
                        .HasForeignKey("UseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nota2.Models.Usuario", b =>
                {
                    b.HasOne("Nota2.Models.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nota2.Models.Voto", b =>
                {
                    b.HasOne("Nota2.Models.Campanha", "Campanha")
                        .WithMany("Votos")
                        .HasForeignKey("CamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
